import sqlite3
import datetime
import config

import telebot
from telebot import types


bot = telebot.TeleBot(config.BOT_TOKEN)
name = None
phone = None
date = None
id = None
price = types.LabeledPrice(label='–ö—É—Ä—Å –ø–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é', amount= 10 * 100)
userAct = '0'

db = sqlite3.connect('Users.db', check_same_thread=False)
sql = db.cursor()
sql.execute('CREATE TABLE IF NOT EXISTS Users ('
            'id INTEGER  NOT NULL PRIMARY KEY,'
            'name VARCHAR,'
            'phone VARCHAR,'
            'date DATE,'
            'act TEXT,'
            'time DATE'
            ')')
db.commit()


def fixMsg(msg):
    msg = "'" + msg + "'"
    return msg


def signUp(message):
    bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –í–∞—à–∏ –§–ò–û')
    bot.register_next_step_handler(message, getName)


def getName(message):
    global name
    name = message.text.strip()
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞')
    bot.register_next_step_handler(message, getPhone)
def pay(message):
    if config.PAYMENT_TOKEN.split(':')[1] == 'TEST':
        bot.send_message(message.chat.id, '–¢–µ—Å—Ç–æ–≤—ã–π –ø–ª–∞—Ç–µ–∂')
    bot.send_invoice(message.chat.id,
                     title = '–ö—É—Ä—Å –ø–æ Python',
                     description = '–û–ø–ª–∞—Ç–∞ –∫—É—Ä—Å–∞ –ø–æ pythone –Ω–∞ –º–µ—Å—è—Ü',
                     provider_token=config.PAYMENT_TOKEN,
                     currency='rub',
                     photo_url='https://img.freepik.com/free-vector/programming-concept-illustration_114360-1670.jpg?size=626&ext=jpg&ga=GA1.1.898993043.1705044857&semt=ais',
                     photo_width=416,
                     photo_height=234,
                     photo_size=416,
                     is_flexible=False,
                     prices=[price],
                     start_parameter='one-month',
                     invoice_payload='test-invoice-payload'
                     )
@bot.pre_checkout_query_handler(lambda query: True)
def pre_checkout_query(pre_checkout_q : types.PreCheckoutQuery):
    bot.answer_pre_checkout_query(pre_checkout_q.id, ok=True)

def getPhone(message):
    global phone
    phone = message.text.strip()
    bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏—Ç–µ —É–¥–æ–±–Ω—É—é –í–∞–º –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì')
    bot.register_next_step_handler(message, getDate)


def getDate(message):
    global date
    timeNow = f"{datetime.datetime.now()}"
    date = message.text.strip()
    sql.execute(f"UPDATE Users SET name = {fixMsg(name)},"
                f"phone = {fixMsg(phone)}, "
                f"date = {fixMsg(date)}, "
                f"act = 'full', "
                f"time = {fixMsg(timeNow)} WHERE id = {id} ")
    db.commit()

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button1 = types.KeyboardButton("–ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –Ω–∞—Å")
    button2 = types.KeyboardButton("–ó–∞–ø–∏—Å–∞—Ç—å—Å—è")
    button3 = types.KeyboardButton("–û–ø–ª–∞—Ç–∏—Ç—å –∫—É—Ä—Å")
    markup.add(button1, button2, button3)
    bot.send_message(message.chat.id,
                     '–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –ø—Ä–æ–±–Ω—ã–π —É—Ä–æ–∫ –≤ –Ω–∞—à—É –æ–Ω–ª–∞–π–Ω-—à–∫–æ–ª—É –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞!üòÉ',
                     reply_markup=markup)



@bot.message_handler()
def start(message):
    if message.text.lower() == '/start':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        button1 = types.KeyboardButton("–ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –Ω–∞—Å")
        button2 = types.KeyboardButton("–ó–∞–ø–∏—Å–∞—Ç—å—Å—è")
        button3 = types.KeyboardButton("–û–ø–ª–∞—Ç–∏—Ç—å –∫—É—Ä—Å")
        markup.add(button1, button2, button3)
        bot.send_message(message.chat.id,
                         f'{message.from_user.first_name}, –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ QiwiKids! –ú—ã —Ä–∞–¥—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≤–∞—Å'
                         f' –≤ –Ω–∞—à–µ–π –æ–Ω–ª–∞–π–Ω-—à–∫–æ–ª–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è!', reply_markup=markup)
    elif message.text.lower() == '–∑–∞–ø–∏—Å–∞—Ç—å—Å—è':
        global id
        id = message.from_user.id
        sql.execute(f"SELECT id FROM users WHERE id = '{id}'")
        if sql.fetchone() is None:
            sql.execute("INSERT INTO users VALUES (?, ?, ?, ?, ?, ?)", (id, "0", "0", "0", "new","0"))
            db.commit()
        userAct = sql.execute(f"SELECT act FROM Users WHERE id = '{id}'").fetchone()[0]
        if userAct == "new":
            signUp(message)
        elif userAct == "full":
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            button1 = types.KeyboardButton("–ò–∑–º–µ–Ω–∏—Ç—å –∑–∞–ø–∏—Å—å")
            button2 = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
            markup.add(button1, button2)
            bot.send_message(message.chat.id,
                             f'{message.from_user.first_name}, –í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –ñ–µ–ª–∞–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –∑–∞–ø–∏—Å—å?',
                             reply_markup=markup)
    elif message.text.lower() == '–∏–∑–º–µ–Ω–∏—Ç—å –∑–∞–ø–∏—Å—å':
        id = message.from_user.id
        sql.execute(f"UPDATE Users SET act = 'new' WHERE id = {id}")
        db.commit()
        signUp(message)

    elif message.text.lower() == '–≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        button1 = types.KeyboardButton("–ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –Ω–∞—Å")
        button2 = types.KeyboardButton("–ó–∞–ø–∏—Å–∞—Ç—å—Å—è")
        button3 = types.KeyboardButton("–û–ø–ª–∞—Ç–∏—Ç—å –∫—É—Ä—Å")
        markup.add(button1, button2, button3)
        bot.send_message(message.chat.id,
                         '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ', reply_markup=markup)

    elif message.text.lower() == '–ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ –Ω–∞—Å':
        markup1 = types.InlineKeyboardMarkup()
        button1 = types.InlineKeyboardButton("–ù–∞—à —Å–∞–π—Ç", url='https://vk.link/qiwikids')
        markup1.add(button1)
        bot.send_message(message.chat.id,
                         "QiwiKids ‚Äì –º–µ—Å—Ç–æ, –≥–¥–µ –¥–µ—Ç–∏ –∏ –ø–æ–¥—Ä–æ—Å—Ç–∫–∏ –ø–æ–ª—É—á–∞—é—Ç –Ω–∞–≤—ã–∫–∏ –¥–ª—è —É—Å–ø–µ—à–Ω–æ–≥–æ –±—É–¥—É—â–µ–≥–æ –∏ —É–∑–Ω–∞—é—Ç –≤—Å—ë –æ –≤—ã—Å–æ–∫–∏—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è—Ö. üòé\n"
                         "–ß—Ç–æ —É–º–µ—é—Ç –¥–µ—Ç–∏ –∏–∑ QiwiKids?\n"
                         "üü£–†–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —Å–∞–π—Ç—ã, –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–µ –∏–≥—Ä—ã –∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.\n"
                         "üü£–ü—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å 3D-–º–æ–¥–µ–ª–∏.\n"
                         "üü£–ü–∏—Å–∞—Ç—å —á–∞—Ç-–±–æ—Ç—ã –∏ —Ä–∞–±–æ—Ç–∞—Ç—å –≤ –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏—Ö —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞—Ö.\n"
                         "–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ QiwiKids –º–æ–∂–Ω–æ —Å –ª—é–±—ã–º —É—Ä–æ–≤–Ω–µ–º –∑–Ω–∞–Ω–∏–π.\n"
                         "–ù–∞ –ø–µ—Ä–≤–æ–º –±–µ—Å–ø–ª–∞—Ç–Ω–æ–º –∑–∞–Ω—è—Ç–∏–∏ –í—ã —É–∑–Ω–∞–µ—Ç–µ –±–æ–ª—å—à–µ –æ –Ω–∞—à–µ–π —à–∫–æ–ª–µ –∏ —Å–º–æ–∂–µ—Ç–µ –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã –Ω–∞–ø—Ä—è–º—É—é –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—é. –ê —Ä–µ–±–µ–Ω–æ–∫ —É–∂–µ —Å–æ–∑–¥–∞—Å—Ç –ø–µ—Ä–≤—ã–π –º–∏–Ω–∏-–ø—Ä–æ–µ–∫—Ç üî• ".format(
                             message.from_user),
                         reply_markup=markup1)
    elif message.text.lower() == '–æ–ø–ª–∞—Ç–∏—Ç—å –∫—É—Ä—Å':
        pay(message)



bot.polling(non_stop=True)
